[tool.poetry]
name = "quantuminspire"
version = "0.1.0"
description = "SDK for the Quantum Inspire platform."
authors = ["Quantum Inspire <support@quantum-inspire.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://www.quantum-inspire.com"
repository = "https://github.com/quantum-inspire-2"
classifiers = [
  'Development Status :: 4 - Beta',
  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'License :: OSI Approved :: Apache Software License'
]

[tool.poetry.scripts]
qi = "quantuminspire.cli.command_list:app"

[tool.poetry.dependencies]
python = "^3.8"
typer = {extras = ["all"], version = "^0.9.0"}
qutechopenql = "^0.12.2"
pydantic = "^2.6.3"
qi-compute-api-client = {git = "https://github.com/QuTech-Delft/compute-api-client.git", branch="0.26.0"}
qxelarator = {version = "^0.6.2", optional = true}
pydantic-settings = "^2.2.1"

[tool.poetry.extras]
local = ["qxelarator"]

[tool.poetry.group.dev.dependencies]
pytest = {extras = ["toml"], version = "^8.1.1"}
pytest-cov = "^4.1.0"
pylint = "^3.1.0"
coverage = {extras = ["toml"], version = "^7.4.3"}
mypy = "^1.9"
docformatter = "1.7.5"
pytest-mock = "^3.12.0"
isort = "^5.13.2"
black = "^24.2.0"
pytest-asyncio = "^0.23.5"


[tool.pytest.ini_options]
addopts = "-v --cov --cov-report term-missing:skip-covered --cov-report xml"
asyncio_mode = "auto"


[tool.coverage.run]
branch = true
omit = ["tests/*", "**/.tox/**"]

[tool.coverage.report]
show_missing = true
fail_under = 100
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[tool.black]
line-length = 120

[tool.mypy]
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true
ignore_missing_imports = true
show_error_codes = true
plugins = [
    "pydantic.mypy"
]
exclude = [
    "examples/"
]

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
line_length = 120

[tool.pylint]
MASTER.extension-pkg-whitelist = "pydantic"
FORMAT.max-line-length = 120

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.docformatter]
recursive = true
wrap-summaries = 119
wrap-descriptions = 119

[tool.pydantic-mypy]
warn_untyped_fields = true
